name: NodeJS
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v4
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
      - id: npm-install
        name: Run "npm install"
        run: npm install
      - id: npm-test
        name: Run "npm run lint:ci"
        run: npm run lint:ci
      # TODO: Annotate PR with ESLint results
  test:
    name: Test
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
    needs:
      - lint
    strategy:
      fail-fast: true
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v4
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
      - id: npm-install
        name: Run "npm install"
        run: npm install
      - id: npm-test
        name: Run "npm run test:ci"
        run: npm run test:ci
  build:
    name: Build
    runs-on: ${{matrix.os}}
    permissions:
      contents: read
    needs:
      - test
    strategy:
      fail-fast: true
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v4
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
      - id: npm-install
        name: Run "npm install"
        run: npm install
      - id: npm-build-standalone
        name: Run "npm run build:standalone"
        run: npm run build:standalone
      - id: upload-standalone-binary
        name: Upload standalone binary
        uses: actions/upload-artifact@v3
        with:
          name: ftb-tool-${{(startsWith(matrix.os, 'windows') && 'windows') || (startsWith(matrix.os, 'macos') && 'macos') || (startsWith(matrix.os, 'ubuntu') && 'linux') || 'unknown'}}
          path: ./dist/ftb-tool${{(startsWith(matrix.os, 'windows') && '.exe') || ''}}
          if-no-files-found: 'error'
  publish-release-artifacts:
    name: Publish release artifacts
    if: ${{github.event_name == 'release' && github.event.action == 'created'}}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - build
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v4
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: npm
      - id: npm-install
        name: Run "npm install"
        run: npm install
      - id: download-artifacts
        name: Download built artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist
      - id: attach-to-release
        name: Attach artifacts to release
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./.github/scripts/upload-release-assets.js');
            await script({github, context, core}, ${{toJson(steps.download-artifacts.outputs.download-path)}});
